--Random Duel
--based off of "Sealed Duel", a script by andre, AlphaKretin, senpaizuri, MLD and by edo9300
-- Cards from the following packs are supported:
--[[
Dark Neostorm, Rising Rampage, Chaos Impact
Ignition Assault, Eternity Code, Rise of the Duelist
--]]

local id=210777998
local selfs={}
if self_table then
	function self_table.initial_effect(c) table.insert(selfs,c) end
end
local pack={}
--DANE
pack[1]={
	97637162, 96915510, 95793022, 95515058, 95493471, 94677445, 93854893, 90126061, 88332693, 88210105, 
	87497553, 86605184, 84731222, 84271823, 84040113, 83928661, 83705073, 83554231, 76589547, 76589546, 
	76375976, 75366958, 75153328, 74644400, 74431740, 74218258, 73422829, 73192600, 72700231, 72083436, 
	69526976, 69394324, 69121954, 63509474, 62587693, 62370023, 61465001, 60643553, 58699500, 58672736, 
	58655504, 58004362, 57450198, 57433966, 57282724, 57160136, 56337500, 52947044, 51225407, 49154689, 
	49094491, 48372950, 48150362, 48032131, 47810543, 47027714, 46701379, 45584727, 40971261, 40003819, 
	36975314, 36730805, 36205132, 36197902, 36111775, 35183584, 34966096, 34244455, 33022867, 23732205, 
	23545031, 22900219, 22510667, 21887175, 21858819, 21187631, 21065189, 20665527, 20343502, 19190082, 
	18478530, 15721392, 15543940, 14604710, 13482262, 13090893, 12977245, 12760674, 11755663, 11434258, 
	10312660, 9794980, 9581215, 8972398, 8868767, 7850740, 2547033, 1825445, 816427, 703897, 39015
}
--CHIM
pack[2]={
	99792080, 99004583, 98570539, 94207108, 93684009, 93084621, 92562411, 92362073, 92176681, 91953000, 
	91740879, 91140491, 91027843, 90814668, 89789152, 89019964, 88996322, 88774734, 88667504, 87844926, 
	87052196, 80831552, 80801743, 80627281, 79656239, 76830505, 75991479, 75713017, 74879881, 73539069, 
	69170403, 68934651, 67712104, 67680512, 66863374, 66290900, 65741786, 63410069, 62393472, 62171834, 
	61459246, 56577312, 55351724, 54807656, 54569495, 54529134, 54446813, 54239282, 53624265, 53417695, 
	52502677, 52394047, 51786039, 49729312, 48596760, 47474172, 42172465, 41440817, 40663548, 40441990, 
	37021315, 36809777, 35498188, 35187185, 33652635, 33298291, 32530043, 31313405, 30691817, 29479265, 
	29357687, 29189613, 28957126, 28534130, 28234578, 28174796, 27412542, 27352108, 27012990, 26236560, 
	25964547, 23935886, 20735371, 20201255, 16990348, 16003979, 15627227, 15381421, 15177750, 14839621, 
	14169843, 14055212, 13224603, 13046291, 5329790, 5041348, 2102065, 1980574, 637216, 263926
}
--ROTD
	pack[3]={
	1984618, 2106266, 3040496, 3828844, 4167084, 7913375, 15989522, 16001119, 16223761, 17946349, 
	18138630, 18168997, 20003027, 20129614, 20899496, 21011044, 21351206, 22073844, 24299458, 25311006, 
	26534688, 29280589, 29354228, 29477860, 30439101, 33296432, 33318980, 34130561, 37256135, 37478723, 
	38590361, 39317553, 40251688, 41373230, 42596828, 43218406, 44440058, 51684157, 51706604, 54527349, 
	54563536, 55289183, 55749927, 56294501, 56401775, 56461575, 57416183, 57523313, 58346901, 60303688, 
	61525276, 62528292, 63644830, 64867422, 65589010, 65711558, 68468459, 69680031, 76833149, 77656797, 
	78778375, 78990927, 80839052, 81951640, 82134632, 82773292, 82896870, 82956214, 84404797, 89617515, 
	90861137, 93018428, 93078761, 94730900, 95679145, 95953557, 96891787, 98804359, 99049589, 99927991, 
}
--RIRA
	pack[4]={
	1050355, 1872843, 2994495, 3567660, 4280258, 5402805, 5524387, 6247535, 9097866, 10612222,
	10642488, 11969228, 13117073, 17469113, 18585765, 19307353, 19420830, 19590644, 21364070, 21834870, 
	22373487, 22586618, 23431858, 23619206, 24557335, 26557451, 26773909, 27240101, 27895597, 28617139, 
	30552375, 30674956, 31897444, 32519092, 35770983, 36492575, 37414347, 37444964, 38267552, 39730727, 
	43735670, 43857222, 44640691, 44680819, 45702357, 46924949, 46984349, 49105782, 49389190, 50820852, 
	52945066, 53167658, 54191698, 54880296, 56001930, 57647597, 57823578, 57869175, 58981727, 59707204, 
	59778096, 60942444, 61764082, 61884774, 62487836, 62886670, 63009228, 63731062, 64002884, 65124425, 
	66947913, 67073561, 68295149, 70252926, 71074418, 71197066, 74665651, 75888208, 76500786, 76722334, 
	78917791, 79130389, 82319644, 83035296, 83195035, 84218527, 84257883, 84430165, 85862791, 85970321, 
	90384300, 91407982, 92223430, 92345028, 95192919, 96214561, 97036149, 98159737, 98371278, 99162753
}
--IGAS
	pack[5]={
	744887, 1566817, 1759808, 1799464, 1799465, 1966438, 2089016, 2801664, 2971446, 3693034, 4148264, 
	4810585, 9028399, 10877309, 11699941, 11711438, 13923256, 14146794, 14532163, 15754711, 15808381, 
	16020923, 20248754, 20426176, 22933016, 22953211, 22953212, 23656668, 24842059, 24882256, 25726386, 
	25904894, 28981598, 29603180, 31374201, 35394356, 36016907, 36239585, 36849933, 37061511, 37351133, 
	38143903, 38173725, 38783169, 38960450, 40140448, 40204620, 40428851, 41306080, 41927278, 42149850, 
	42429678, 45462149, 46271408, 49082032, 49296203, 50277355, 55976207, 56198785, 57093995, 58116537, 
	59054773, 59208943, 59332125, 61399402, 62111090, 62411042, 63056220, 63233638, 63633694, 64178868, 
	64756282, 67647362, 68769900, 68957925, 74578720, 75364199, 75690317, 76209339, 76416959, 76587747, 
	77421977, 77539547, 78543464, 78751195, 83266006, 84482694, 84504242, 85327820, 86449372, 88413677, 
	90444325, 92597893, 93031067, 94253655, 94446564, 97383507, 97661969, 98506199, 98806751, 99628747, 99885917
}
--ETCO
	pack[6]={
	220414, 5206415, 5376159, 6438003, 6498706, 6728559, 7150545, 7337976, 7540107, 7610394, 7610395, 8372133, 
	8495780, 8559524, 8662794, 10493654, 11516241, 11738489, 11738490, 12450071, 17016131, 18832779, 18954366, 
	19211362, 19671102, 23672629, 24521754, 24799107, 25643346, 26866984, 29177818, 29374928, 31548215, 31588572, 
	32422602, 32600024, 32764863, 32887445, 33212663, 33545259, 33609093, 33945211, 34496660, 34721681, 34761841, 
	43004235, 44161893, 44227727, 45483489, 45666710, 45943123, 46606977, 46898368, 47910940, 48736598, 50793215, 
	51916853, 52038441, 55349375, 55762976, 56161953, 59071624, 59859086, 60033398, 62850093, 63972571, 67037924, 
	68159562, 68199168, 69003792, 69381150, 69811710, 69811711, 69838761, 70156946, 70226289, 70333910, 71278040, 
	71348837, 71555408, 71978434, 72060415, 72090076, 73287067, 73309655, 75988594, 80621422, 81344070, 82257671, 
	82566662, 83682209, 84121193, 85243784, 85243785, 86066372, 87188910, 90361289, 94183877, 94431029, 94553671, 
	95568112, 97268402, 97300502, 98022050, 99249638
}

--before anything
if not BoosterDraft then
	BoosterDraft={}
	local function finish_setup() 
		--Pre-draw
		local e1=Effect.GlobalEffect()
		e1:SetType(EFFECT_TYPE_FIELD+EFFECT_TYPE_CONTINUOUS)
		e1:SetCode(EVENT_STARTUP)
		e1:SetCountLimit(1)
		e1:SetOperation(BoosterDraft.op)
		Duel.RegisterEffect(e1,0)
	end
	function BoosterDraft.op(e,tp,eg,ep,ev,re,r,rp)
		local z,o=tp,1-tp
		--Hint
		local counts={}
		counts[0]=Duel.GetPlayersCount(0)
		counts[1]=Duel.GetPlayersCount(1)
		Duel.DisableShuffleCheck()
		Duel.Hint(HINT_CARD,0,id)

		for p=z,o do
			for team=1,counts[p] do
				Duel.SendtoDeck(Duel.GetFieldGroup(tp,0xff,0xff),0,-2,REASON_RULE)
				if counts[p]~=1 then
					Duel.TagSwap(p)
				end
			end
		end

		local groups={}
		groups[0]={}
		groups[1]={}
		for i=1,counts[0] do
			groups[0][i]={}
		end
		for i=1,counts[1] do
			groups[1][i]={}
		end

		local function generate_packs()
			local retpacks={}
			local size=Duel.GetRandomNumber(50,60)--using 50 because some extra deck cards might be created
			for t=1,size*2 do
				local g=Group.CreateGroup()
				local cpack=pack[Duel.GetRandomNumber(1,6)]--number of packs I have
				local c=cpack[Duel.GetRandomNumber(1,#cpack)]
				g:AddCard(Debug.AddCard(c,t%2,t%2,LOCATION_GRAVE,1,POS_FACEUP))
				table.insert(retpacks,g)
			end
			Debug.ReloadFieldEnd()
			return retpacks
		end
		local packs = generate_packs() --calls the function above
		::exit::
		for p=z,o do
			for team=1,counts[p] do
				local graveg=Duel.GetFieldGroup(p,LOCATION_GRAVE,0)
				local tempg=Group.CreateGroup()
				for tc in aux.Next(graveg) do
					tc:Recreate(groups[p][team][#tempg+1],nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,true)
					tempg:AddCard(tc)
					if #tempg==#groups[p][team] then break end
				end
				Duel.SendtoDeck(tempg,nil,2,REASON_RULE)
				Duel.ShuffleDeck(p)
				if counts[p]~=1 then
					Duel.TagSwap(p)
				end
			end
		end
		e:Reset()
	end
	finish_setup()
end
